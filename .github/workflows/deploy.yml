name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to Server
      run: |
        # 设置SSH
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
        # 一键部署
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          set -e  # 遇到错误立即退出
          
          echo '🚀 开始部署...'
          
          # 创建目录
          sudo mkdir -p /var/www/app
          sudo chown ubuntu:ubuntu /var/www/app
          echo '✅ 目录创建完成'
          
          # 安装系统依赖（包含unzip）
          sudo apt update -qq
          sudo apt install -y python3-pip python3-venv git curl unzip
          echo '✅ 系统依赖安装完成'
          
          # 下载代码
          cd /var/www/app
          rm -rf product-auto-test
          wget -q https://github.com/s2265681/Project-Auto-Testing/archive/refs/heads/main.zip
          unzip -q main.zip
          mv Project-Auto-Testing-main product-auto-test
          rm main.zip
          cd product-auto-test
          echo '✅ 代码下载完成'
          
          # 创建Python虚拟环境
          echo '开始创建虚拟环境...'
          python3 -m venv venv
          echo '虚拟环境创建命令执行完成，检查结果...'
          ls -la venv/
          echo '检查venv/bin目录内容:'
          ls -la venv/bin/
          echo '✅ 虚拟环境创建完成'
          
          # 查找正确的Python路径
          if [ -f 'venv/bin/python3' ]; then
            PYTHON_PATH='venv/bin/python3'
            echo '✅ 找到Python路径: venv/bin/python3'
          elif [ -f 'venv/bin/python' ]; then
            PYTHON_PATH='venv/bin/python'
            echo '✅ 找到Python路径: venv/bin/python'
          else
            echo '❌ 未找到Python可执行文件'
            echo 'venv/bin目录内容:'
            ls -la venv/bin/
            exit 1
          fi
          
          # 激活虚拟环境并安装依赖
          source venv/bin/activate
          echo '虚拟环境激活成功'
          which python
          python --version
          pip install -r requirements.txt --quiet
          echo '✅ Python依赖安装完成'
          
          # 创建环境文件
          cat > .env << 'EOF'
        ENVIRONMENT=production
        FEISHU_APP_ID=${{ secrets.FEISHU_APP_ID }}
        FEISHU_APP_SECRET=${{ secrets.FEISHU_APP_SECRET }}
        FEISHU_VERIFICATION_TOKEN=${{ secrets.FEISHU_VERIFICATION_TOKEN }}
        GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
        FIGMA_ACCESS_TOKEN=${{ secrets.FIGMA_ACCESS_TOKEN }}
        EOF
          echo '✅ 环境文件创建完成'
          
          # 安装Node.js和PM2
          if ! command -v pm2 &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo npm install -g pm2
            echo '✅ Node.js和PM2安装完成'
          else
            echo '✅ PM2已存在'
          fi
          
          # 重启服务
          pm2 delete product-auto-test 2>/dev/null || true
          pm2 start api_server.py --name product-auto-test --interpreter \$PYTHON_PATH
          pm2 save
          echo '✅ PM2服务启动完成'
          
          # 最后的成功信息（关闭严格错误检查）
          set +e
          echo '🎉 部署完成！'
          echo '服务器地址: http://18.141.179.222:5001'
          echo '当前目录: '\$(pwd)''
          pwd
          echo '部署成功！API服务正在运行'
          exit 0
        " 