# 健壮的部署脚本 - 修复SSH连接和指纹问题 - 2024
name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to Server
      env:
        FEISHU_APP_ID: ${{ secrets.FEISHU_APP_ID }}
        FEISHU_APP_SECRET: ${{ secrets.FEISHU_APP_SECRET }}
        FEISHU_VERIFICATION_TOKEN: ${{ secrets.FEISHU_VERIFICATION_TOKEN }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        FIGMA_ACCESS_TOKEN: ${{ secrets.FIGMA_ACCESS_TOKEN }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
      run: |
        # 设置SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p ${SSH_PORT:-22} $SERVER_HOST >> ~/.ssh/known_hosts
        
        # 打包代码
        tar -czf app.tar.gz --exclude='.git' --exclude='venv' --exclude='__pycache__' .
        
        # 上传并部署
        scp -P ${SSH_PORT:-22} app.tar.gz $SERVER_USER@$SERVER_HOST:/tmp/
        ssh -p ${SSH_PORT:-22} $SERVER_USER@$SERVER_HOST << 'EOF'
          # 部署代码
          sudo mkdir -p /var/www/app
          sudo chown $USER:$USER /var/www/app
          cd /var/www/app
          
          # 备份旧版本
          [ -d "current" ] && mv current backup-$(date +%Y%m%d-%H%M%S)
          
          # 解压新代码
          mkdir current
          tar -xzf /tmp/app.tar.gz -C current
          cd current
          
          # 安装依赖
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          
          # 创建环境变量文件
          cat > .env << 'ENV'
        FEISHU_APP_ID=$FEISHU_APP_ID
        FEISHU_APP_SECRET=$FEISHU_APP_SECRET
        FEISHU_VERIFICATION_TOKEN=$FEISHU_VERIFICATION_TOKEN
        GEMINI_API_KEY=$GEMINI_API_KEY
        FIGMA_ACCESS_TOKEN=$FIGMA_ACCESS_TOKEN
        ENVIRONMENT=production
        ENV
          
          # PM2 部署
          pm2 delete product-auto-test 2>/dev/null || true
          pm2 start api_server.py --name product-auto-test --interpreter $(pwd)/venv/bin/python
          pm2 save
          
          # 清理临时文件
          rm /tmp/app.tar.gz
          
          echo "✅ 部署完成！"
        EOF 